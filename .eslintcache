[{"D:\\work\\dictionarysearch\\src\\App.tsx":"1","D:\\work\\dictionarysearch\\src\\index.tsx":"2","D:\\work\\dictionarysearch\\src\\request.ts":"3","D:\\work\\dictionarysearch\\src\\store\\store.ts":"4","D:\\work\\dictionarysearch\\src\\constants.ts":"5","D:\\work\\dictionarysearch\\src\\components\\Container.tsx":"6","D:\\work\\dictionarysearch\\src\\components\\Header.tsx":"7","D:\\work\\dictionarysearch\\src\\components\\SearchInput.tsx":"8","D:\\work\\dictionarysearch\\src\\components\\SearchTypeSelect.tsx":"9","D:\\work\\dictionarysearch\\src\\components\\SearchButton.tsx":"10","D:\\work\\dictionarysearch\\src\\components\\TotalNumber.tsx":"11","D:\\work\\dictionarysearch\\src\\store\\storeProvider.ts":"12","D:\\work\\dictionarysearch\\src\\store\\useStore.ts":"13"},{"size":1383,"mtime":1612383947641,"results":"14","hashOfConfig":"15"},{"size":349,"mtime":1612383951868,"results":"16","hashOfConfig":"15"},{"size":418,"mtime":1612381913270,"results":"17","hashOfConfig":"15"},{"size":1575,"mtime":1612383619251,"results":"18","hashOfConfig":"15"},{"size":691,"mtime":1612383962753,"results":"19","hashOfConfig":"15"},{"size":539,"mtime":1612298177384,"results":"20","hashOfConfig":"15"},{"size":286,"mtime":1612298024967,"results":"21","hashOfConfig":"15"},{"size":719,"mtime":1612379501036,"results":"22","hashOfConfig":"15"},{"size":754,"mtime":1612370480257,"results":"23","hashOfConfig":"15"},{"size":478,"mtime":1612380335384,"results":"24","hashOfConfig":"15"},{"size":419,"mtime":1612381478219,"results":"25","hashOfConfig":"15"},{"size":202,"mtime":1612383904840,"results":"26","hashOfConfig":"15"},{"size":192,"mtime":1612383906736,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"1xlq4yc",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\work\\dictionarysearch\\src\\App.tsx",["61"],"import { jsx } from \"@emotion/react\";\nimport { observer } from \"mobx-react\";\nimport { Chart, Interval } from \"bizcharts\";\n\nimport { useStore } from \"./store/useStore\";\nimport Container from \"./components/Container\";\nimport Header from \"./components/Header\";\nimport SearchInput from \"./components/SearchInput\";\nimport SearchTypeSelect from \"./components/SearchTypeSelect\";\nimport SearchButton from \"./components/SearchButton\";\nimport TotalNumber from \"./components/TotalNumber\";\nimport { OPTIONS } from \"./constants\";\n\nimport \"./index.css\";\n\nconst App = () => {\n  const {\n    makeSearch,\n    searchType,\n    searchPhrase,\n    setSearchPhrase,\n    setSearchType,\n    number,\n    loading,\n    chartData,\n  } = useStore();\n\n  return (\n    <Container>\n      <Header />\n\n      <SearchInput\n        onChange={setSearchPhrase}\n        value={searchPhrase}\n        placeholder={\"Enter a letter to search for...\"}\n      />\n\n      <SearchTypeSelect\n        options={OPTIONS}\n        value={searchType}\n        onChange={setSearchType}\n      />\n\n      <SearchButton onClick={makeSearch}>Search</SearchButton>\n\n      {number && !loading && <TotalNumber>{number}</TotalNumber>}\n      {loading && <p>Loading...</p>}\n\n      <Chart autoFit data={chartData} placeholder={\"Loading\"}>\n        <Interval position={\"letter*total\"} />\n      </Chart>\n    </Container>\n  );\n};\n\nexport default observer(App);\n","D:\\work\\dictionarysearch\\src\\index.tsx",["62"],"D:\\work\\dictionarysearch\\src\\request.ts",["63"],"D:\\work\\dictionarysearch\\src\\store\\store.ts",[],"D:\\work\\dictionarysearch\\src\\constants.ts",[],"D:\\work\\dictionarysearch\\src\\components\\Container.tsx",["64"],"import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { jsx } from \"@emotion/react\";\r\n\r\nconst StyledContainer = styled.div`\r\n  margin: auto;\r\n  padding: 16px;\r\n  border: 1px solid #4064ac;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  border-radius: 4px;\r\n  width: fit-content;\r\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n`;\r\n\r\nconst Container: React.FC = ({ children }) => (\r\n  <StyledContainer>{children}</StyledContainer>\r\n);\r\n\r\nexport default Container;\r\n",["65","66"],"D:\\work\\dictionarysearch\\src\\components\\Header.tsx",["67"],"D:\\work\\dictionarysearch\\src\\components\\SearchInput.tsx",["68"],"import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { jsx } from \"@emotion/react\";\r\n\r\nconst StyledInput = styled.input`\r\n  border: none;\r\n  border-bottom: 1px solid #4064ac;\r\n  padding: 8px;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  &:focus {\r\n    outline: none;\r\n    border-bottom-color: #013bb1;\r\n  }\r\n  &::placeholder {\r\n    text-transform: none;\r\n  }\r\n`;\r\n\r\ntype Props = {\r\n  onChange: (evt: React.ChangeEvent<HTMLInputElement>) => void;\r\n  value: string;\r\n  placeholder: string;\r\n};\r\n\r\nconst SearchInput: React.FC<Props> = ({ onChange, value, placeholder }) => (\r\n  <StyledInput onChange={onChange} value={value} placeholder={placeholder} />\r\n);\r\n\r\nexport default SearchInput;\r\n","D:\\work\\dictionarysearch\\src\\components\\SearchTypeSelect.tsx",["69"],"import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { jsx } from \"@emotion/react\";\r\n\r\nconst StyledSelect = styled.select`\r\n  border: none;\r\n  border-bottom: 1px solid #4064ac;\r\n  padding: 8px;\r\n  &:focus {\r\n    outline: none;\r\n    border-bottom-color: #013bb1;\r\n  }\r\n`;\r\n\r\ntype Props = {\r\n  onChange: (evt: React.ChangeEvent<HTMLSelectElement>) => void;\r\n  value: SearchType;\r\n  options: SearchTypeOption[];\r\n};\r\n\r\nconst SearchTypeSelect: React.FC<Props> = ({ onChange, value, options }) => (\r\n  <StyledSelect onChange={onChange} value={value}>\r\n    {options.map(({ value, label }) => (\r\n      <option key={value} value={value}>\r\n        {label}\r\n      </option>\r\n    ))}\r\n  </StyledSelect>\r\n);\r\n\r\nexport default SearchTypeSelect;\r\n","D:\\work\\dictionarysearch\\src\\components\\SearchButton.tsx",["70"],"import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { jsx } from \"@emotion/react\";\r\n\r\nconst StyledButton = styled.div`\r\n  margin-top: 8px;\r\n  padding: 8px 16px;\r\n  text-transform: uppercase;\r\n  background-color: #4064ac;\r\n  color: white;\r\n`;\r\n\r\ntype Props = {\r\n  onClick: () => void;\r\n};\r\n\r\nconst SearchButton: React.FC<Props> = ({ children, onClick }) => (\r\n  <StyledButton onClick={onClick}>{children}</StyledButton>\r\n);\r\n\r\nexport default SearchButton;\r\n","D:\\work\\dictionarysearch\\src\\components\\TotalNumber.tsx",["71"],"import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { jsx } from \"@emotion/react\";\r\n\r\nconst StyledParagraph = styled.p`\r\n  margin-top: 8px;\r\n  padding: 8px 16px;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  color: #4064ac;\r\n`;\r\n\r\nconst TotalNumber: React.FC = ({ children }) => (\r\n  <StyledParagraph>\r\n    The answer is <br /> {children}\r\n  </StyledParagraph>\r\n);\r\n\r\nexport default TotalNumber;\r\n","D:\\work\\dictionarysearch\\src\\store\\storeProvider.ts",[],"D:\\work\\dictionarysearch\\src\\store\\useStore.ts",[],{"ruleId":"72","severity":1,"message":"73","line":1,"column":10,"nodeType":"74","messageId":"75","endLine":1,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":13},{"ruleId":"76","severity":1,"message":"77","line":3,"column":1,"nodeType":"78","endLine":18,"endColumn":3},{"ruleId":"72","severity":1,"message":"73","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":13},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"72","severity":1,"message":"73","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":13},"@typescript-eslint/no-unused-vars","'jsx' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-global-assign","no-unsafe-negation"]